name: GitHub and Slack

on:
  issues:
    types: [opened]
  workflow_dispatch:
# env:
#   SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#   SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ID }}

jobs:
  searchKeyword:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Search for keyword
      if: github.event_name == 'issues' && github.event.action == 'opened'
      id: search
      run: |
        keyword=$(echo "${{ github.event.issue.title }}" | awk '{print tolower($0)}')
        echo "Searching for directories name containing $keyword"
        readarray -t dirs <<< "$(find . -iname "*$keyword*" -type d -path '*/pages/*' -print0 | xargs -0)"
        echo "Found directories: ${dirs[@]}"
        echo "::set-output name=dirnames::${dirs[@]}"

    - name: Generate Slack Message
      id: generate_message
      if: github.event_name == 'issues' && github.event.action == 'opened'
      run: |
        formatted_dirs=$(echo "${{ steps.search.outputs.dirnames }}" | sed 's/ /\n/g' | sed 's/^/"/' | sed 's/$/"/' | paste -sd ' ' -)
        echo "The link of knowledge articles:"
        messages=()
        for dir in $formatted_dirs; do
          dir=$(basename "$dir" | sed 's/\"//g')
          message="https://probable-dollop-19qk3nl.pages.github.io/pages/$dir/$dir"
          messages+=("$message")
        done
        message="${messages[*]}"
        echo "Found message: $message"
        echo "::set-output name=message::$message"
      env:
        pythonLocation: /opt/hostedtoolcache/Python/3.11.3/x64
        LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.3/x64/lib

    - name: Send Slack Notification
      if: github.event_name == 'issues' && github.event.action == 'opened' && steps.search.outputs.dirnames != ''
      run: |
        SLACK_BOT_TOKEN="${{ secrets.SLACK_BOT_TOKEN }}"
        SLACK_CHANNEL_ID="${{ secrets.SLACK_CHANNEL_ID }}"
        SLACK_MESSAGE="*Link of Knowledge Articles:*\n ${{ steps.generate_message.outputs.message }}\n"
        THREAD_TS="${{ github.event.issue.body }}"
        ICON_EMOJI=":information_desk_person:"
        curl -X POST -H "Content-type: application/json" \
          -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
          -d "{
            \"channel\": \"${SLACK_CHANNEL_ID}\",
            \"text\": \"${SLACK_MESSAGE}\",
            \"thread_ts\": \"${THREAD_TS}\",
            \"icon_emoji\": \"${ICON_EMOJI}\",
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"*Link of Knowledge Articles:*\n _${{ steps.generate_message.outputs.message }}_\"
                }
              }
            ]
          }" \
          https://slack.com/api/chat.postMessage
      
    - name: Close Slack Thread
      run: |
        SLACK_BOT_TOKEN="${{ secrets.SLACK_BOT_TOKEN }}"
        SLACK_CHANNEL_ID="${{ secrets.SLACK_CHANNEL_ID }}"
        SLACK_MESSAGE="*If you need further assistance, please start a new chat.\n Thank you!*"
        THREAD_TS="${{ github.event.issue.body }}"
        ICON_EMOJI=":information_desk_person:"
        curl -X POST -H "Content-type: application/json" \
          -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
          -d "{
            \"channel\": \"${SLACK_CHANNEL_ID}\",
            \"thread_ts\": \"${THREAD_TS}\",
            \"text\": \"${SLACK_MESSAGE}\",
            \"icon_emoji\": \"${ICON_EMOJI}\",
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"*If you need further assistance, please start a new chat.*\n *Thank you!*\"
                }
              }
            ]
          }" \
          https://slack.com/api/chat.postMessage
        

  closeIssue:
    needs: searchKeyword
    runs-on: ubuntu-latest
    steps: 
      - name: Close Issue
        id: closeIssue
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          TOKEN="${{ secrets.KA_GITHUB_TOKEN }}"
          REPO_OWNER="${{ secrets.KA_GITHUB_REPO_OWNER }}"
          REPO_NAME="${{ secrets.KA_GITHUB_REPO_NAME }}"
                  
          API_URL="https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/$ISSUE_NUMBER"
                  
          # Close the issue
          curl -X PATCH -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"state": "closed"}' \
            $API_URL
                    
          # Add a comment
          curl -X POST -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"body": "Auto-closing issue-number: ${{ github.event.issue.number }}"}' \
            $API_URL/comments

