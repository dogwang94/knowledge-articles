name: KA Application

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10

      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Start Docker daemon
      run: |
        sudo service docker start

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-gov-west-1

    - name: Build and Deploy Docker Image
      env:
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        ECR_URL: 490700692490.dkr.ecr.us-gov-west-1.amazonaws.com/dots/slack-ka-bot
        GITHUB_TOKEN: ${{ secrets.KA_GITHUB_TOKEN }}
      run: |
        echo "setting semver"
        chmod 777 version-setter.py
        python version-setter.py
        SEMVER=`cat ./final_version.txt`
        echo $SEMVER
        
        ####TODO: SEPARATE LATEST TAG INTO MAIN BRANCH ONLY####
        echo "Building image"
        docker build -t $ECR_URL:$SEMVER .
        docker build -t $ECR_URL:latest .

        echo "Pushing Image to ECR"
        aws ecr get-login-password --region us-gov-west-1 | docker login --username AWS --password-stdin 490700692490.dkr.ecr.us-gov-west-1.amazonaws.com
        docker push $ECR_URL:$SEMVER
        docker push $ECR_URL:latest


        echo "Create release"
        hub release create -m $SEMVER $SEMVER
    
        echo "Redeploy ECS!"
        echo "Replace image in current task def revision"
        TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "slack-ka-bot-task" --region "us-gov-west-1")
        NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$ECR_URL:$SEMVER" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
        echo "Register new task definition"
        aws ecs register-task-definition --region "us-gov-west-1" --cli-input-json "$NEW_TASK_DEFINITION"
        echo "Deploy new revision to ECS"
        aws ecs update-service --cluster "slack-ka-bot" --service "slack-ka-bot-svc" --task-definition "slack-ka-bot-task"  --force-new-deployment 

